{"ast":null,"code":"var _jsxFileName = \"/home/vipl039/Documents/assignments/leucine_tech/src/container/FormContainer.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '../contents/Button/Button';\nimport InputBox from '../contents/InputBox/InputBox';\n\nclass FormContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(InputBox, {\n      label: \"Analytical Method ID\",\n      isRequired: true,\n      type: \"text\",\n      ref: \"analytical_method_ID\",\n      reference: \"analytics_medhod_id\" // updateValue={this.updateValue.bind(this)}\n      ,\n      updateValue: e => {\n        this.setState({\n          analytical_method_ID: ReactDOM.findDOMNode(this.refs.analytical_method_ID.refs.input).value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default FormContainer;","map":{"version":3,"sources":["/home/vipl039/Documents/assignments/leucine_tech/src/container/FormContainer.js"],"names":["React","ReactDOM","Button","InputBox","FormContainer","Component","constructor","props","state","render","e","setState","analytical_method_ID","findDOMNode","refs","input","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,QAAP,MAAqB,+BAArB;;AAEA,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAGH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,KAAK,EAAE,sBADX;AAEI,MAAA,UAAU,EAAE,IAFhB;AAGI,MAAA,IAAI,EAAE,MAHV;AAII,MAAA,GAAG,EAAE,sBAJT;AAKI,MAAA,SAAS,EAAE,qBALf,CAMG;AANH;AAOI,MAAA,WAAW,EAAGC,CAAD,IAAO;AAAC,aAAKC,QAAL,CAAc;AAACC,UAAAA,oBAAoB,EAAEX,QAAQ,CAACY,WAAT,CAAqB,KAAKC,IAAL,CAAUF,oBAAV,CAA+BE,IAA/B,CAAoCC,KAAzD,EAAgEC;AAAvF,SAAd;AAA6G,OAPtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ;AAgBH;;AAzBsC;;AA2B3C,eAAeZ,aAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '../contents/Button/Button';\nimport InputBox from '../contents/InputBox/InputBox';\n\nclass FormContainer extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n\n        }\n    }\n    \n    render(){\n        return(\n            <div className=\"form-container\">\n                <div className=\"box-container\">\n                    <InputBox \n                        label={\"Analytical Method ID\"}\n                        isRequired={true}\n                        type={\"text\"}\n                        ref={\"analytical_method_ID\"}\n                        reference={\"analytics_medhod_id\"}\n                       // updateValue={this.updateValue.bind(this)}\n                        updateValue={(e) => {this.setState({analytical_method_ID: ReactDOM.findDOMNode(this.refs.analytical_method_ID.refs.input).value})}}\n                    />\n                </div>\n                \n            </div>\n        )\n    }\n}\nexport default FormContainer;"]},"metadata":{},"sourceType":"module"}