{"ast":null,"code":"var _jsxFileName = \"/home/vipl039/Documents/assignments/leucine_tech/src/container/FormContainer.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '../contents/Button/Button';\nimport InputBox from '../contents/InputBox/InputBox';\nimport SelectBox from '../contents/selectBox/SelectBox';\nimport fetchData from '../modules/NetworkAdapter';\nimport { FETCH_TARGET_RESIDUE_TYPE } from '../constants/config';\n\nclass FormContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      target_residue_type_list: []\n    };\n  }\n\n  componentDidMount() {\n    fetchData.getJson({}).then(res => {\n      this.setState({\n        target_residue_type_list: res\n      });\n    });\n  }\n\n  render() {\n    console.log(\"this.state\", this.state);\n    return React.createElement(\"div\", {\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(InputBox, {\n      label: \"Analytical Method ID\",\n      isRequired: true,\n      type: \"text\",\n      ref: \"analytical_method_ID\",\n      updateValue: e => {\n        this.setState({\n          analytical_method_ID: ReactDOM.findDOMNode(this.refs.analytical_method_ID.refs.input).value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(SelectBox, {\n      label: \"Target Residue Type\",\n      isRequired: true,\n      type: \"select\",\n      ref: \"target_residue_type\",\n      options: this.state.target_residue_type_list,\n      updateValue: e => {\n        this.setState({\n          target_residue_type: ReactDOM.findDOMNode(this.refs.target_residue_type.refs.input).value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(InputBox, {\n      label: \"reason\",\n      isRequired: true,\n      type: \"text\",\n      ref: \"reason\",\n      updateValue: e => {\n        this.setState({\n          reason: ReactDOM.findDOMNode(this.refs.reason.refs.input).value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default FormContainer;","map":{"version":3,"sources":["/home/vipl039/Documents/assignments/leucine_tech/src/container/FormContainer.js"],"names":["React","ReactDOM","Button","InputBox","SelectBox","fetchData","FETCH_TARGET_RESIDUE_TYPE","FormContainer","Component","constructor","props","state","target_residue_type_list","componentDidMount","getJson","then","res","setState","render","console","log","e","analytical_method_ID","findDOMNode","refs","input","value","target_residue_type","reason"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAAQC,yBAAR,QAAwC,qBAAxC;;AACA,MAAMC,aAAN,SAA4BP,KAAK,CAACQ,SAAlC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,wBAAwB,EAAE;AADjB,KAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAE;AACfR,IAAAA,SAAS,CAACS,OAAV,CAAkB,EAAlB,EACCC,IADD,CACMC,GAAG,IAAI;AACT,WAAKC,QAAL,CAAc;AAACL,QAAAA,wBAAwB,EAAEI;AAA3B,OAAd;AACH,KAHD;AAIH;;AAEDE,EAAAA,MAAM,GAAE;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKT,KAA/B;AACA,WACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,KAAK,EAAE,sBADX;AAEI,MAAA,UAAU,EAAE,IAFhB;AAGI,MAAA,IAAI,EAAE,MAHV;AAII,MAAA,GAAG,EAAE,sBAJT;AAKI,MAAA,WAAW,EAAGU,CAAD,IAAO;AAAC,aAAKJ,QAAL,CAAc;AAACK,UAAAA,oBAAoB,EAAErB,QAAQ,CAACsB,WAAT,CAAqB,KAAKC,IAAL,CAAUF,oBAAV,CAA+BE,IAA/B,CAAoCC,KAAzD,EAAgEC;AAAvF,SAAd;AAA6G,OALtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAE,qBADX;AAEI,MAAA,UAAU,EAAE,IAFhB;AAGI,MAAA,IAAI,EAAE,QAHV;AAII,MAAA,GAAG,EAAE,qBAJT;AAKI,MAAA,OAAO,EAAE,KAAKf,KAAL,CAAWC,wBALxB;AAMI,MAAA,WAAW,EAAGS,CAAD,IAAO;AAAC,aAAKJ,QAAL,CAAc;AAACU,UAAAA,mBAAmB,EAAE1B,QAAQ,CAACsB,WAAT,CAAqB,KAAKC,IAAL,CAAUG,mBAAV,CAA8BH,IAA9B,CAAmCC,KAAxD,EAA+DC;AAArF,SAAd;AAA2G,OANpI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EAiBI,oBAAC,QAAD;AACI,MAAA,KAAK,EAAE,QADX;AAEI,MAAA,UAAU,EAAE,IAFhB;AAGI,MAAA,IAAI,EAAE,MAHV;AAII,MAAA,GAAG,EAAE,QAJT;AAKI,MAAA,WAAW,EAAGL,CAAD,IAAO;AAAC,aAAKJ,QAAL,CAAc;AAACW,UAAAA,MAAM,EAAE3B,QAAQ,CAACsB,WAAT,CAAqB,KAAKC,IAAL,CAAUI,MAAV,CAAiBJ,IAAjB,CAAsBC,KAA3C,EAAkDC;AAA3D,SAAd;AAAiF,OAL1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBJ,CADJ,CADJ;AA8BH;;AA9CsC;;AAgD3C,eAAenB,aAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '../contents/Button/Button';\nimport InputBox from '../contents/InputBox/InputBox';\nimport SelectBox from '../contents/selectBox/SelectBox';\nimport fetchData from '../modules/NetworkAdapter';\nimport {FETCH_TARGET_RESIDUE_TYPE} from '../constants/config';\nclass FormContainer extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            target_residue_type_list: []\n        }\n    }\n    componentDidMount(){\n        fetchData.getJson({})\n        .then(res => {\n            this.setState({target_residue_type_list: res})\n        })\n    }\n    \n    render(){\n        console.log(\"this.state\", this.state)\n        return(\n            <div className=\"form-container\">\n                <div className=\"box-container\">\n                    <InputBox \n                        label={\"Analytical Method ID\"}\n                        isRequired={true}\n                        type={\"text\"}\n                        ref={\"analytical_method_ID\"}\n                        updateValue={(e) => {this.setState({analytical_method_ID: ReactDOM.findDOMNode(this.refs.analytical_method_ID.refs.input).value})}}\n                    />\n                    <SelectBox \n                        label={\"Target Residue Type\"}\n                        isRequired={true}\n                        type={\"select\"}\n                        ref={\"target_residue_type\"}\n                        options={this.state.target_residue_type_list}\n                        updateValue={(e) => {this.setState({target_residue_type: ReactDOM.findDOMNode(this.refs.target_residue_type.refs.input).value})}}\n                    \n                    />\n                    <InputBox \n                        label={\"reason\"}\n                        isRequired={true}\n                        type={\"text\"}\n                        ref={\"reason\"}\n                        updateValue={(e) => {this.setState({reason: ReactDOM.findDOMNode(this.refs.reason.refs.input).value})}}\n                    />\n                </div>\n                \n            </div>\n        )\n    }\n}\nexport default FormContainer;"]},"metadata":{},"sourceType":"module"}