{"ast":null,"code":"var _jsxFileName = \"/home/vipl039/Documents/assignments/leucine_tech/src/container/FormContainer.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '../contents/Button/Button';\nimport InputBox from '../contents/InputBox/InputBox';\n\nclass FormContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  updateValue(e) {\n    console.log(\"this.refs\", this.refs.input.value);\n    this.setState({\n      value: ReactDOM.findDOMNode(this.refs.analytical_method_ID.refs.input).value\n    });\n    console.log([this.state.label], this.state.value);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(InputBox, {\n      label: \"Analytical Method ID\",\n      isRequired: true,\n      type: \"text\",\n      ref: \"analytical_method_ID\",\n      reference: \"analytics_medhod_id\",\n      updateValue: this.props.updateValue.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default FormContainer;","map":{"version":3,"sources":["/home/vipl039/Documents/assignments/leucine_tech/src/container/FormContainer.js"],"names":["React","ReactDOM","Button","InputBox","FormContainer","Component","constructor","props","state","updateValue","e","console","log","refs","input","value","setState","findDOMNode","analytical_method_ID","label","render","bind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,QAAP,MAAqB,+BAArB;;AAEA,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAGH;;AACDC,EAAAA,WAAW,CAACC,CAAD,EAAG;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKC,IAAL,CAAUC,KAAV,CAAgBC,KAAzC;AACA,SAAKC,QAAL,CAAc;AACVD,MAAAA,KAAK,EAAEd,QAAQ,CAACgB,WAAT,CAAqB,KAAKJ,IAAL,CAAUK,oBAAV,CAA+BL,IAA/B,CAAoCC,KAAzD,EAAgEC;AAD7D,KAAd;AAGAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,KAAKJ,KAAL,CAAWW,KAAZ,CAAZ,EAAgC,KAAKX,KAAL,CAAWO,KAA3C;AACH;;AACDK,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,KAAK,EAAE,sBADX;AAEI,MAAA,UAAU,EAAE,IAFhB;AAGI,MAAA,IAAI,EAAE,MAHV;AAII,MAAA,GAAG,EAAE,sBAJT;AAKI,MAAA,SAAS,EAAE,qBALf;AAMI,MAAA,WAAW,EAAE,KAAKb,KAAL,CAAWE,WAAX,CAAuBY,IAAvB,CAA4B,IAA5B,CANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ;AAeH;;AA9BsC;;AAgC3C,eAAejB,aAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '../contents/Button/Button';\nimport InputBox from '../contents/InputBox/InputBox';\n\nclass FormContainer extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n\n        }\n    }\n    updateValue(e){\n        console.log(\"this.refs\", this.refs.input.value)\n        this.setState({\n            value: ReactDOM.findDOMNode(this.refs.analytical_method_ID.refs.input).value\n        });\n        console.log([this.state.label], this.state.value)\n    }\n    render(){\n        return(\n            <div className=\"form-container\">\n                <div className=\"box-container\">\n                    <InputBox \n                        label={\"Analytical Method ID\"}\n                        isRequired={true}\n                        type={\"text\"}\n                        ref={\"analytical_method_ID\"}\n                        reference={\"analytics_medhod_id\"}\n                        updateValue={this.props.updateValue.bind(this)}\n                    />\n                </div>\n                \n            </div>\n        )\n    }\n}\nexport default FormContainer;"]},"metadata":{},"sourceType":"module"}