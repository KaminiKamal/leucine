{"ast":null,"code":"var _jsxFileName = \"/home/vipl039/Documents/assignments/leucine_tech/src/container/FormContainer.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '../contents/Button/Button';\nimport InputBox from '../contents/InputBox/InputBox';\nimport SelectBox from '../contents/selectBox/SelectBox';\nimport fetchData from '../modules/NetworkAdapter';\nimport { FETCH_TARGET_RESIDUE_TYPE } from '../constants/config';\nimport CardContents from '../contents/CardContents';\n\nclass FormContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      target_residue_type_list: [],\n      contents: null\n    };\n  }\n\n  componentDidMount() {\n    fetchData.getJson(FETCH_TARGET_RESIDUE_TYPE).then(res => {\n      this.setState({\n        target_residue_type_list: res\n      });\n    });\n  } // static getDerivedStateFromProps(nextProps, state){\n  //    \n  // }\n\n\n  setLQD_LODValues(data) {\n    console.log(\"setLQD_LODValues\", data);\n  }\n\n  targetResidueType(e) {\n    let target_residue_type = ReactDOM.findDOMNode(this.refs.target_residue_type.refs.input).value;\n    this.setState({\n      target_residue_type: ReactDOM.findDOMNode(this.refs.target_residue_type.refs.input).value\n    });\n\n    switch (target_residue_type) {\n      case \"API\":\n        this.setState({\n          contents: React.createElement(CardContents, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          })\n        });\n        return this;\n    }\n  }\n\n  render() {\n    console.log(\"this.state\", this.state);\n    return React.createElement(\"div\", {\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(InputBox, {\n      label: \"Analytical Method ID\",\n      isRequired: true,\n      type: \"text\",\n      ref: \"analytical_method_ID\",\n      updateValue: e => {\n        this.setState({\n          analytical_method_ID: ReactDOM.findDOMNode(this.refs.analytical_method_ID.refs.input).value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(SelectBox, {\n      label: \"Target Residue Type\",\n      isRequired: true,\n      type: \"select\",\n      ref: \"target_residue_type\",\n      options: this.state.target_residue_type_list,\n      updateValue: this.targetResidueType.bind(this) // updateValue={(e) => {this.setState({target_residue_type: ReactDOM.findDOMNode(this.refs.target_residue_type.refs.input).value})}}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"selected-content-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.contents), React.createElement(InputBox, {\n      label: \"reason\",\n      isRequired: true,\n      type: \"text\",\n      ref: \"reason\",\n      updateValue: e => {\n        this.setState({\n          reason: ReactDOM.findDOMNode(this.refs.reason.refs.input).value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default FormContainer;","map":{"version":3,"sources":["/home/vipl039/Documents/assignments/leucine_tech/src/container/FormContainer.js"],"names":["React","ReactDOM","Button","InputBox","SelectBox","fetchData","FETCH_TARGET_RESIDUE_TYPE","CardContents","FormContainer","Component","constructor","props","state","target_residue_type_list","contents","componentDidMount","getJson","then","res","setState","setLQD_LODValues","data","console","log","targetResidueType","e","target_residue_type","findDOMNode","refs","input","value","render","analytical_method_ID","bind","reason"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '../contents/Button/Button';\nimport InputBox from '../contents/InputBox/InputBox';\nimport SelectBox from '../contents/selectBox/SelectBox';\nimport fetchData from '../modules/NetworkAdapter';\nimport {FETCH_TARGET_RESIDUE_TYPE} from '../constants/config';\nimport CardContents from '../contents/CardContents';\nclass FormContainer extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            target_residue_type_list: [],\n            contents: null\n        }\n    }\n    componentDidMount(){\n        fetchData.getJson(FETCH_TARGET_RESIDUE_TYPE)\n        .then(res => {\n            this.setState({target_residue_type_list: res})\n        })\n    }\n    // static getDerivedStateFromProps(nextProps, state){\n    //    \n    // }\n    setLQD_LODValues(data){\n        console.log(\"setLQD_LODValues\", data)\n    }\n    targetResidueType(e){\n        let target_residue_type = ReactDOM.findDOMNode(this.refs.target_residue_type.refs.input).value;\n        this.setState({target_residue_type: ReactDOM.findDOMNode(this.refs.target_residue_type.refs.input).value});\n        switch(target_residue_type){\n            case \"API\":\n                this.setState({contents: <CardContents />})\n                return this;\n        }\n    }\n    render(){\n        console.log(\"this.state\", this.state)\n        return(\n            <div className=\"form-container\">\n                <div className=\"box-container\">\n                    <InputBox \n                        label={\"Analytical Method ID\"}\n                        isRequired={true}\n                        type={\"text\"}\n                        ref={\"analytical_method_ID\"}\n                        updateValue={(e) => {this.setState({analytical_method_ID: ReactDOM.findDOMNode(this.refs.analytical_method_ID.refs.input).value})}}\n                    />\n                    <SelectBox \n                        label={\"Target Residue Type\"}\n                        isRequired={true}\n                        type={\"select\"}\n                        ref={\"target_residue_type\"}\n                        options={this.state.target_residue_type_list}\n                        updateValue={this.targetResidueType.bind(this)}\n                       // updateValue={(e) => {this.setState({target_residue_type: ReactDOM.findDOMNode(this.refs.target_residue_type.refs.input).value})}}\n                    \n                    />\n                    <div className=\"selected-content-area\">\n                        {this.state.contents}\n                    </div>\n                    <InputBox \n                        label={\"reason\"}\n                        isRequired={true}\n                        type={\"text\"}\n                        ref={\"reason\"}\n                        updateValue={(e) => {this.setState({reason: ReactDOM.findDOMNode(this.refs.reason.refs.input).value})}}\n                    />\n                </div>\n                \n            </div>\n        )\n    }\n}\nexport default FormContainer;"]},"metadata":{},"sourceType":"module"}