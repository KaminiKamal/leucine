{"ast":null,"code":"var _jsxFileName = \"/home/vipl039/Documents/assignments/leucine_tech/src/container/FormContainer.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '../contents/Button/Button';\nimport InputBox from '../contents/InputBox/InputBox';\nimport SelectBox from '../contents/selectBox/SelectBox';\nimport fetchData from '../modules/NetworkAdapter';\n\nclass FormContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      target_residue_type: []\n    };\n  }\n\n  componentDidMount() {\n    fetchData.getJson(\"http://www.json-generator.com/api/json/get/cqlwKIgIKq?indent=2\").then(res => res.json()).then(res => {\n      this.setState({});\n    });\n  }\n\n  render() {\n    console.log(\"this.state\", this.state);\n    return React.createElement(\"div\", {\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(InputBox, {\n      label: \"Analytical Method ID\",\n      isRequired: true,\n      type: \"text\",\n      ref: \"analytical_method_ID\",\n      reference: \"analytics_medhod_id\",\n      updateValue: e => {\n        this.setState({\n          analytical_method_ID: ReactDOM.findDOMNode(this.refs.analytical_method_ID.refs.input).value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(SelectBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(InputBox, {\n      label: \"reason\",\n      isRequired: true,\n      type: \"text\",\n      ref: \"reason\",\n      reference: \"reason\",\n      updateValue: e => {\n        this.setState({\n          reason: ReactDOM.findDOMNode(this.refs.reason.refs.input).value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default FormContainer;","map":{"version":3,"sources":["/home/vipl039/Documents/assignments/leucine_tech/src/container/FormContainer.js"],"names":["React","ReactDOM","Button","InputBox","SelectBox","fetchData","FormContainer","Component","constructor","props","state","target_residue_type","componentDidMount","getJson","then","res","json","setState","render","console","log","e","analytical_method_ID","findDOMNode","refs","input","value","reason"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;AAEA,MAAMC,aAAN,SAA4BN,KAAK,CAACO,SAAlC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,mBAAmB,EAAE;AADZ,KAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAE;AACfP,IAAAA,SAAS,CAACQ,OAAV,CAAkB,gEAAlB,EACCC,IADD,CACMC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EADZ,EAECF,IAFD,CAEMC,GAAG,IAAI;AACT,WAAKE,QAAL,CAAc,EAAd;AACH,KAJD;AAKH;;AAEDC,EAAAA,MAAM,GAAE;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKV,KAA/B;AACA,WACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,KAAK,EAAE,sBADX;AAEI,MAAA,UAAU,EAAE,IAFhB;AAGI,MAAA,IAAI,EAAE,MAHV;AAII,MAAA,GAAG,EAAE,sBAJT;AAKI,MAAA,SAAS,EAAE,qBALf;AAMI,MAAA,WAAW,EAAGW,CAAD,IAAO;AAAC,aAAKJ,QAAL,CAAc;AAACK,UAAAA,oBAAoB,EAAErB,QAAQ,CAACsB,WAAT,CAAqB,KAAKC,IAAL,CAAUF,oBAAV,CAA+BE,IAA/B,CAAoCC,KAAzD,EAAgEC;AAAvF,SAAd;AAA6G,OANtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EASI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAUI,oBAAC,QAAD;AACI,MAAA,KAAK,EAAE,QADX;AAEI,MAAA,UAAU,EAAE,IAFhB;AAGI,MAAA,IAAI,EAAE,MAHV;AAII,MAAA,GAAG,EAAE,QAJT;AAKI,MAAA,SAAS,EAAE,QALf;AAMI,MAAA,WAAW,EAAGL,CAAD,IAAO;AAAC,aAAKJ,QAAL,CAAc;AAACU,UAAAA,MAAM,EAAE1B,QAAQ,CAACsB,WAAT,CAAqB,KAAKC,IAAL,CAAUG,MAAV,CAAiBH,IAAjB,CAAsBC,KAA3C,EAAkDC;AAA3D,SAAd;AAAiF,OAN1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CADJ,CADJ;AAwBH;;AAzCsC;;AA2C3C,eAAepB,aAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '../contents/Button/Button';\nimport InputBox from '../contents/InputBox/InputBox';\nimport SelectBox from '../contents/selectBox/SelectBox';\nimport fetchData from '../modules/NetworkAdapter';\n\nclass FormContainer extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            target_residue_type: []\n        }\n    }\n    componentDidMount(){\n        fetchData.getJson(\"http://www.json-generator.com/api/json/get/cqlwKIgIKq?indent=2\")\n        .then(res=>(res.json()))\n        .then(res => {\n            this.setState({})\n        })\n    }\n    \n    render(){\n        console.log(\"this.state\", this.state)\n        return(\n            <div className=\"form-container\">\n                <div className=\"box-container\">\n                    <InputBox \n                        label={\"Analytical Method ID\"}\n                        isRequired={true}\n                        type={\"text\"}\n                        ref={\"analytical_method_ID\"}\n                        reference={\"analytics_medhod_id\"}\n                        updateValue={(e) => {this.setState({analytical_method_ID: ReactDOM.findDOMNode(this.refs.analytical_method_ID.refs.input).value})}}\n                    />\n                    <SelectBox />\n                    <InputBox \n                        label={\"reason\"}\n                        isRequired={true}\n                        type={\"text\"}\n                        ref={\"reason\"}\n                        reference={\"reason\"}\n                        updateValue={(e) => {this.setState({reason: ReactDOM.findDOMNode(this.refs.reason.refs.input).value})}}\n                    />\n                </div>\n                \n            </div>\n        )\n    }\n}\nexport default FormContainer;"]},"metadata":{},"sourceType":"module"}