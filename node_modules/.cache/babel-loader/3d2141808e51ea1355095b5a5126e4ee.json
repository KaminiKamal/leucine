{"ast":null,"code":"var _jsxFileName = \"/home/vipl039/Documents/assignments/leucine_tech/src/container/BottomBar.js\";\nimport React, { Component } from 'react';\nimport Button from '../contents/Button/Button';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as aioActions from '../actions/index';\nimport Alert from 'react-s-alert';\nimport 'react-s-alert/dist/s-alert-default.css';\n\nclass BottomBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  updateFinalValue() {\n    this.props.signalToUpdate();\n  }\n\n  cancelFinalValue() {\n    Alert.error('Failed to submit!', {\n      position: 'top-right',\n      timeout: 2000\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    //console.log(\"getDerivedStateFromProps\", nextProps, prevState);\n    if (nextProps.updatedDataList) {\n      //code to call API to submit data\n      //alert('Data Submitted')\n      if (!nextProps.updatedDataList.analytical_method_ID) {\n        Alert.error('Failed to submit! Must provide an Analytical Method ID', {\n          position: 'top-right',\n          timeout: 2000\n        });\n      } else {\n        Alert.success('Data Submitted Successfully!', {\n          position: 'top-right',\n          timeout: 2000\n        });\n      }\n    }\n\n    return prevState;\n  }\n\n  render() {\n    //console.log(\"ppppppppp\", this.props)\n    return React.createElement(\"div\", {\n      className: \"bottom-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      stack: {\n        limit: 3\n      },\n      timeout: 2000,\n      onClose: this.handleOnClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"btn-float-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Button, {\n      label: \"Cancel\",\n      isRequired: true,\n      type: \"button\",\n      addInputStyle: \"button-box-left\",\n      updateFinalValue: this.cancelFinalValue.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"btn-float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Button, {\n      label: \"Update\",\n      isRequired: true,\n      type: \"button\",\n      addInputStyle: \"button-box-right\",\n      updateFinalValue: this.updateFinalValue.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  //console.log(\"mapStateToProps\", state)\n  return {\n    updatedDataList: state.updateDataList\n  };\n};\n\nexport default connect(mapStateToProps, null)(BottomBar);","map":{"version":3,"sources":["/home/vipl039/Documents/assignments/leucine_tech/src/container/BottomBar.js"],"names":["React","Component","Button","connect","bindActionCreators","aioActions","Alert","BottomBar","constructor","props","state","updateFinalValue","signalToUpdate","cancelFinalValue","error","position","timeout","getDerivedStateFromProps","nextProps","prevState","updatedDataList","analytical_method_ID","success","render","limit","handleOnClose","bind","mapStateToProps","ownProps","updateDataList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Button from '../contents/Button/Button';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as aioActions from '../actions/index';\nimport Alert from 'react-s-alert';\nimport 'react-s-alert/dist/s-alert-default.css';\n\nclass BottomBar extends Component {\n    constructor(props){\n        super(props);\n        this.state = {}\n    }\n    updateFinalValue(){\n        this.props.signalToUpdate();\n    }\n    cancelFinalValue(){\n        Alert.error('Failed to submit!', {\n            position: 'top-right',\n            timeout: 2000\n        });\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState){\n        //console.log(\"getDerivedStateFromProps\", nextProps, prevState);\n        if(nextProps.updatedDataList){\n            //code to call API to submit data\n            //alert('Data Submitted')\n            if(!nextProps.updatedDataList.analytical_method_ID){\n                Alert.error('Failed to submit! Must provide an Analytical Method ID', {\n                    position: 'top-right',\n                    timeout: 2000\n                });\n            }\n            else{\n                Alert.success('Data Submitted Successfully!', {\n                position: 'top-right',\n                timeout: 2000\n            });\n        }\n        }\n        return prevState;\n    }\n    \n\n    render() {\n        //console.log(\"ppppppppp\", this.props)\n        return (\n            <div className=\"bottom-bar\">\n                <Alert stack={{limit: 3}} timeout={2000} onClose={this.handleOnClose}/>\n                <div className=\"button-container\">\n                    <div className=\"btn-float-left\">\n                        <Button \n                            label={\"Cancel\"}\n                            isRequired={true}\n                            type={\"button\"}\n                            addInputStyle={`button-box-left`}\n                            updateFinalValue={this.cancelFinalValue.bind(this)}\n                        />\n                    </div>\n                    \n                    <div className=\"btn-float-right\">\n                        <Button \n                            label={\"Update\"}\n                            isRequired={true}\n                            type={\"button\"}\n                            addInputStyle={`button-box-right`}\n                            updateFinalValue={this.updateFinalValue.bind(this)}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n  }\n}\nconst  mapStateToProps = (state, ownProps) => {\n    //console.log(\"mapStateToProps\", state)\n        return {\n            updatedDataList: state.updateDataList\n        };\n    }\n    \n\nexport default connect(mapStateToProps, null)(BottomBar);"]},"metadata":{},"sourceType":"module"}