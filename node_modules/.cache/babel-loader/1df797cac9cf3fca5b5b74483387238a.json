{"ast":null,"code":"var _jsxFileName = \"/home/vipl039/Documents/assignments/leucine_tech/src/contents/CardContents.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport InputBox from '../contents/InputBox/InputBox';\nexport default class CardContents extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      target_residue_type_list: [],\n      lod: \"\",\n      loq: \"\"\n    };\n  }\n\n  updateLODValue(e) {\n    this.setState({\n      lod: ReactDOM.findDOMNode(this.refs.lod.refs.input).value\n    }, () => {\n      this.props.setLQD_LODValues(this.state);\n    });\n  }\n\n  updateLOQValue(e) {\n    this.setState({\n      loq: ReactDOM.findDOMNode(this.refs.loq.refs.input).value\n    }, () => {\n      this.props.setLQD_LODValues(this.state);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"card-contents\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-content-items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"display-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(InputBox, {\n      label: \"LOD (in ppm)\",\n      isRequired: true,\n      type: \"text\",\n      ref: \"lod\",\n      addInputStyle: \"input-box-half\",\n      addClass: \"input-box-container-half\",\n      updateValue: this.updateLODValue.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"display-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(InputBox, {\n      label: \"LOQ (in ppm)\",\n      isRequired: true,\n      type: \"text\",\n      ref: \"loq\",\n      addInputStyle: \"input-box-half\",\n      addClass: \"input-box-container-half\",\n      updateValue: this.updateLOQValue.bind(this) //updateValue={(e) => {this.setState({loq: ReactDOM.findDOMNode(this.refs.analytical_method_ID.refs.input).value})}}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/vipl039/Documents/assignments/leucine_tech/src/contents/CardContents.js"],"names":["React","Component","ReactDOM","InputBox","CardContents","constructor","props","state","target_residue_type_list","lod","loq","updateLODValue","e","setState","findDOMNode","refs","input","value","setLQD_LODValues","updateLOQValue","render","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AAEA,eAAe,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAChDI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,wBAAwB,EAAE,EADjB;AAETC,MAAAA,GAAG,EAAE,EAFI;AAGTC,MAAAA,GAAG,EAAE;AAHI,KAAb;AAKH;;AAEDC,EAAAA,cAAc,CAACC,CAAD,EAAG;AAEb,SAAKC,QAAL,CAAc;AACVJ,MAAAA,GAAG,EAAEP,QAAQ,CAACY,WAAT,CAAqB,KAAKC,IAAL,CAAUN,GAAV,CAAcM,IAAd,CAAmBC,KAAxC,EAA+CC;AAD1C,KAAd,EAEE,MAAM;AACJ,WAAKX,KAAL,CAAWY,gBAAX,CAA4B,KAAKX,KAAjC;AACH,KAJD;AAKH;;AAEDY,EAAAA,cAAc,CAACP,CAAD,EAAG;AACb,SAAKC,QAAL,CAAc;AACVH,MAAAA,GAAG,EAAER,QAAQ,CAACY,WAAT,CAAqB,KAAKC,IAAL,CAAUL,GAAV,CAAcK,IAAd,CAAmBC,KAAxC,EAA+CC;AAD1C,KAAd,EAEG,MAAM;AACL,WAAKX,KAAL,CAAWY,gBAAX,CAA4B,KAAKX,KAAjC;AACH,KAJD;AAKH;;AAEDa,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,KAAK,EAAE,cADX;AAEI,MAAA,UAAU,EAAE,IAFhB;AAGI,MAAA,IAAI,EAAE,MAHV;AAII,MAAA,GAAG,EAAE,KAJT;AAKI,MAAA,aAAa,kBALjB;AAMI,MAAA,QAAQ,4BANZ;AAOI,MAAA,WAAW,EAAE,KAAKT,cAAL,CAAoBU,IAApB,CAAyB,IAAzB,CAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAYI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,KAAK,EAAE,cADX;AAEI,MAAA,UAAU,EAAE,IAFhB;AAGI,MAAA,IAAI,EAAE,MAHV;AAII,MAAA,GAAG,EAAE,KAJT;AAKI,MAAA,aAAa,kBALjB;AAMI,MAAA,QAAQ,4BANZ;AAOI,MAAA,WAAW,EAAE,KAAKF,cAAL,CAAoBE,IAApB,CAAyB,IAAzB,CAPjB,CAQI;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAZJ,CADJ,CADJ;AA6BH;;AAzD+C","sourcesContent":["import React, { Component } from 'react'\nimport ReactDOM from 'react-dom';\nimport InputBox from '../contents/InputBox/InputBox';\n\nexport default class CardContents extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            target_residue_type_list: [],\n            lod: \"\",\n            loq: \"\"\n        }\n    }\n    \n    updateLODValue(e){\n\n        this.setState({\n            lod: ReactDOM.findDOMNode(this.refs.lod.refs.input).value\n        },() => {\n            this.props.setLQD_LODValues(this.state);\n        });\n    }\n\n    updateLOQValue(e){\n        this.setState({\n            loq: ReactDOM.findDOMNode(this.refs.loq.refs.input).value\n        }, () => {\n            this.props.setLQD_LODValues(this.state);\n        });\n    }\n    \n    render() {\n        return (\n            <div className=\"card-contents\">\n                <div className=\"card-content-items\">\n                    <div className=\"display-box\">\n                        <InputBox \n                            label={\"LOD (in ppm)\"}\n                            isRequired={true}\n                            type={\"text\"}\n                            ref={\"lod\"}\n                            addInputStyle={`input-box-half`}\n                            addClass={`input-box-container-half`}\n                            updateValue={this.updateLODValue.bind(this)}\n                        />\n                    </div>\n                    <div className=\"display-box\">\n                        <InputBox \n                            label={\"LOQ (in ppm)\"}\n                            isRequired={true}\n                            type={\"text\"}\n                            ref={\"loq\"}\n                            addInputStyle={`input-box-half`}\n                            addClass={`input-box-container-half`}\n                            updateValue={this.updateLOQValue.bind(this)}\n                            //updateValue={(e) => {this.setState({loq: ReactDOM.findDOMNode(this.refs.analytical_method_ID.refs.input).value})}}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}